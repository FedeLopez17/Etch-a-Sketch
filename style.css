*{
    margin: 0;
    padding: 0;
}

body{
    display: flex;
    width: 100vw;
    height: 100vh;
    justify-content: flex-start;
    align-items: center;
    --stripe: rgb(100, 160, 210); /* steelblue but proportionally lighter*/
    --bg: rgb(206, 226, 252); /* lightsteelblue but proportionally lighter*/
    background: linear-gradient(135deg, var(--bg) 25%, transparent 25%) -6.25vh 0,
      linear-gradient(225deg, var(--bg) 25%, transparent 25%) -6.25vh 0,
      linear-gradient(315deg, var(--bg) 25%, transparent 25%),
      linear-gradient(45deg, var(--bg) 25%, transparent 25%);
    background-size: 12.5vh 12.5vh;
    background-color: var(--stripe);
}

.sketch-container{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: red;
    width: 70vw;
    height: 35vw;
    border-radius: 5vh;
    box-shadow: 1.5vh -1.1vh 0vh 0.5vh darkred, 1vh 0vh 8vh -1vh #ffff00c2;
    border-style: groove;
    border-color: silver;
    margin-left: 8.5vw;
    margin-right: auto;
}

.slide-in-animation{
    animation: slide-in 0.5s;
    animation-iteration-count: 1;
}

.clear-shake-animation{
    animation: shake 0.2s;
    animation-iteration-count: 1;
}

@keyframes slide-in {
    0% { transform: translateX(86vw) rotate(0deg); }
    10% { transform: scale(1, 0.9) translateX(86vw) skew(-15deg);}
    20% { transform: scale(1, 0.9) translateX(60vw) skew(-15deg);}
    30% { transform: scale(1, 0.9) translateX(40vw) skew(-20deg);}
    40% { transform: scale(1, 0.9) translateX(30vw) skew(-15deg);}
    50% { transform: scale(1, 0.9) translateX(20vw) skew(-10deg);}
    60% { transform: translate(-0.3vh, 0.1vh) skew(10deg); }
    70% { transform: translate(0.3vh, 0.1vh) rotate(-1deg); }
    80% { transform: translate(-0.1vh, -0.1vh) rotate(1deg); }
    90% { transform: translate(0.1vh, 0.2vh) rotate(0deg); }
    100% { transform: translate(0.1vh, -0.2vh) rotate(-1deg); }
}

.title-wrapper{
    display: flex;
    justify-content: center;
    align-items: center;
    /*font-family: "Whisper", cursive;*/
    color: gold;
    font-size: 8vh;
    font-weight: bold;
    margin-top: 0.5vh;
    text-shadow: -0.2vh 0 black, 0 0.2vh black, 0.2vh 0 black, 0 -0.2vh black;
}

.registered-symbol{
    font-size: 3vh;
    align-self: flex-start;
    margin-left: 0.5vh;
}

.different-font{
    align-self: flex-end;
    font-family: 'Courier New', Courier, monospace;
    font-size: 3vh;
    font-weight: bold;
    color: goldenrod;
    margin: 1vh;
}

.different-font.right{
    margin-left: -1vh;
}

.grid-container{
    display: flex;
    flex: 6;
    flex-direction: column;
    background-color: white;
    width: 60vw;
    height: 30vw;
    border-style: solid;
    border-left-style: none;
    border-bottom: none;
    border-width: 0.2vh;
    border-color: lightgrey;
}

.horizontal-divs{
    display: flex;
    flex: 1;
}

.squares{
    flex: 1;
    border-left-style: solid;
    border-bottom-style: solid;
    border-width: 0.2vh;
    border-color: lightgrey;
}

.no-grid{
    border-style: none;
}

.knobs{
    flex: 1;
    align-self: normal;
    display:flex;
    justify-content: space-between;
}

.knob.one, .two{
    padding: 2vw;
    background-color: white;
    border-radius: 100%;
    margin-left: 1vh;
    margin-bottom: 1vh;
    box-shadow: inset -0.5vh -0.2vh 2vh 0.3vh grey;
}

.knob.two{
    margin-left:0;
    margin-right: 1vh; 
}

.controls{
    display: flex;
    justify-self: flex-start;
    flex-direction: column;
    gap: 0.75vh;
    width: 4vw;
    height: 40.4vh;
    margin-left: 2vw;
    animation: fall 1s;
    animation-iteration-count: 1;
}

@keyframes fall {
    0% { transform: translateY(-50vw);}
    50% { transform: translateY(-50vw);}
    55% { transform: translateY(-45vw);}
    60% { transform: translateY(-40vw);}
    65% { transform: translateY(-35vw);}
    70% { transform: translateY(-30vw);}
    75% { transform: translateY(-25vw);}
    80% { transform: translateY(-20vw);}
    85% { transform: translateY(-15vw);}
    90% { transform: translateY(-10vw);}
    95% { transform: translateY(-5vw);}
    100% { transform: translateY(0);}
}


.mouse-over{
    transform: scale(1.1);
    box-shadow: 0vh 0vh 2vh 0vh black;
}

.control-wrapper{
    border-style: solid;
    background-color: red;
    display:flex;
    flex-direction: column;
    align-items: center;
    border-width: 0.3vh;
    width: 7vh;
}

.control-wrapper .grid-density-wrapper{
    height: 10vh;
}

#grid-density{
    transform: rotate(270deg);
    width: 8vh;
    height: 10vh;
 }

input[type="color"] {
	-webkit-appearance: none;
	border: none;
	width: 1vh;
	height: 1vh;
}
input[type="color"]::-webkit-color-swatch-wrapper {
	padding: 0;
}
input[type="color"]::-webkit-color-swatch {
	border: none;
}

 #color{
    width: 4vh;
    height: 4vh;
}


/* The following animation was made following this tutorial and adapting it to my needs: www.w3schools.com/howto/howto_css_shake_image.asp */
img:hover, input:hover {
    animation: shake 0.5s;
    animation-iteration-count: infinite;
}

input#grid-density:hover {
    animation: shake2 0.5s;
    animation-iteration-count: infinite;
}
  
@keyframes shake {
    0% { transform: translate(0.1vh, 0.1vh) rotate(0deg); }
    10% { transform: translate(-0.1vh, -0.2vh) rotate(-1deg); }
    20% { transform: translate(-0.3vh, 0vh) rotate(1deg); }
    30% { transform: translate(0.3vh, 0.2vh) rotate(0deg); }
    40% { transform: translate(0.1vh, -0.1vh) rotate(1deg); }
    50% { transform: translate(-0.1vh, 0.2vh) rotate(-1deg); }
    60% { transform: translate(-0.3vh, 0.1vh) rotate(0deg); }
    70% { transform: translate(0.3vh, 0.1vh) rotate(-1deg); }
    80% { transform: translate(-0.1vh, -0.1vh) rotate(1deg); }
    90% { transform: translate(0.1vh, 0.2vh) rotate(0deg); }
    100% { transform: translate(0.1vh, -0.2vh) rotate(-1deg); }
}

@keyframes shake2 {
    0% { transform: translate(0.1vh, 0.1vh) rotate(270deg); }
    10% { transform: translate(-0.1vh, -0.2vh) rotate(269deg); }
    20% { transform: translate(-0.3vh, 0vh) rotate(271deg); }
    30% { transform: translate(0.3vh, 0.2vh) rotate(270deg); }
    40% { transform: translate(0.1vh, -0.1vh) rotate(271deg); }
    50% { transform: translate(-0.1vh, 0.2vh) rotate(269deg); }
    60% { transform: translate(-0.3vh, 0.1vh) rotate(270deg); }
    70% { transform: translate(0.3vh, 0.1vh) rotate(269deg); }
    80% { transform: translate(-0.1vh, -0.1vh) rotate(271deg); }
    90% { transform: translate(0.1vh, 0.2vh) rotate(270deg); }
    100% { transform: translate(0.1vh, -0.2vh) rotate(269deg); }
}

.rainbow{
    width: 6vh;
}

.eraser{
    width: 5vh;
}

.clear{
    width: 4vh;
}

.gridToggle{
    width: 4vh;
}

.selected{
    background-color: #ffebcd; /* blanchedalmond*/
    transform: scale(1.1);
    border-color: #000000;
    box-shadow: 0vh 0vh 2vh 0vh black;
}

/* To style the range input (used to select grid density) I followed this tutorial: css-tricks.com/styling-cross-browser-compatible-range-inputs-css/
   This first part is used to override the default appearance of range inputs*/
   input[type=range] {
    -webkit-appearance: none; 
    width: 100%; 
    background: transparent;
}
  
  input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
}
  
  input[type=range]:focus {
    outline: none;
}
  
  input[type=range]::-ms-track {
    width: 100%;
    cursor: pointer;
  
    background: transparent; 
    border-color: transparent;
    color: transparent;
}
/* Thumb styling*/
input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    border: 0.2vh solid #000000;
    height: 4vh;
    width: 2vh;
    border-radius: 0.6vh;
    background: #ffffff;
    cursor: pointer;
    margin-top: -1.7vh; 
    box-shadow: 0.2vh 0.2vh 0.2vh #000000, 0.2vh 0.2vh 0.2vh #0d0d0d;
}
  
input[type=range]::-moz-range-thumb {
    box-shadow: 0.2vh 0.2vh 0.2vh #000000, 0.2vh 0.2vh 0.2vh #0d0d0d;
    border: 0.2vh solid #000000;
    height: 4vh;
    width: 2vh;
    border-radius: 0.6vh;
    background: #ffffff;
    cursor: pointer;
}
  
input[type=range]::-ms-thumb {
    box-shadow: 0.2vh 0.2vh 0.2vh #000000, 0.2vh 0.2vh 0.2vh #0d0d0d;
    border: 0.2vh solid #000000;
    height: 4vh;
    width: 2vh;
    border-radius: 0.6vh;
    background: #ffffff;
    cursor: pointer;
}
  
/* Track styling*/
input[type=range]::-webkit-slider-runnable-track {
    width: 100%;
    height: 1vh;
    cursor: pointer;
    box-shadow: 0.2vh 0.2vh 0.2vh #000000, 0.2vh 0.2vh 0.2vh #0d0d0d;
    background: #3071a9;
    border-radius: 0.25vh;
    border: 0.02vh solid #010101;
}
  
input[type=range]:focus::-webkit-slider-runnable-track {
    background: #367ebd;
}
  
input[type=range]::-moz-range-track {
    width: 100%;
    height: 1vh;
    cursor: pointer;
    box-shadow: 0.2vh 0.2vh 0.2vh #000000, 0.2vh 0.2vh 0.2vh #0d0d0d;
    background: #3071a9;
    border-radius: 0.25vh;;
    border: 0.02vh solid #010101;
}
  
input[type=range]::-ms-track {
    width: 100%;
    height: 1vh;
    cursor: pointer;
    background: transparent;
    border-color: transparent;
    border-width: 2vh 0;
    color: transparent;
}
input[type=range]::-ms-fill-lower {
    background: #2a6495;
    border: 0.02vh solid #010101;
    border-radius: 0.5vh;
    box-shadow: 0.2vh 0.2vh 0.2vh #000000, 0.2vh 0.2vh 0.2vh #0d0d0d;
}
input[type=range]:focus::-ms-fill-lower {
    background: #3071a9;
}
input[type=range]::-ms-fill-upper {
    background: #3071a9;
    border: 0.02vh solid #010101;
    border-radius: 0.5vh;
    box-shadow: 0.2vh 0.2vh 0.2vh #000000, 0.2vh 0.2vh 0.2vh #0d0d0d;
}
input[type=range]:focus::-ms-fill-upper {
    background: #367ebd;
}

